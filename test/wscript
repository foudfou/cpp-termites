#! /usr/bin/env python
# Copyright (c) 2014 Foudil Br√©tel. All rights reserved.

def configure(cnf):
    cnf.env.TARGET_APP_TEST = 'unittestmain'
    cnf.env.TEST_INC_DIRS = ['../include', '.']


def build(bld):
    MAIN = 'main.cpp'
    sources = bld.path.ant_glob('*.cpp', excl=MAIN)
    main = bld.path.get_src().find_node(MAIN)
    sources.insert(0, main)     # linking order matters!
    bld.program(
        name     = 'tests',
        features = 'cxx cxxprogram test',
        source   = sources,
        target   = bld.env.TARGET_APP_TEST,
        includes = bld.env.TEST_INC_DIRS,
        use      = 'SRC_OBJS'
    )

    from waflib.Tools import waf_unit_test
    bld.add_post_fun(waf_unit_test.summary)

    if bld.options.do_coverage:
        bldtest = bld.path.get_bld()
        bldsrc  = bldtest.parent.make_node('src')
        # could also use --remove instead of --no-external
        lcov_args = ' -c -d %s -d %s -d %s --no-external --quiet' % \
                    (bld.env.SRC_DIR, bldsrc.abspath(), bldtest.abspath())
        bld(name='lcov_ini', after='utest', always=True, rule=(
            bld.env.LCOV+lcov_args+' -i -o ${env.LCOV_DIR}/run_base.info'))
        bld(name='cov_run', after='lcov_ini', always=True, rule=
            '${SRC}', source=bld.env.TARGET_APP_TEST)
        bld(name='lcov_test', after='cov_run', always=True, rule=(
            bld.env.LCOV+lcov_args+' -o ${env.LCOV_DIR}/run_test.info'))
        bld(name='lcov_add', after='lcov_test', always=True, rule=(
            bld.env.LCOV+' -a ${env.LCOV_DIR}/run_base.info'
            ' -a ${env.LCOV_DIR}/run_test.info'
            ' -o ${env.LCOV_DIR}/run_total.info'))
        bld(name='cov_genhtml', always=True, after='lcov_add', rule=(
            bld.env.GENHTML + ' --output-directory ${env.LCOV_DIR}'
            ' ${env.LCOV_DIR}/run_total.info --quiet'))
